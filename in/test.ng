//const http = require('http')
//
//http.createServer((req, res)=>{
//  res.writeHead(200);
//  res.end('Hello World');
//}).listen(8080)

/*
var perf_hooks = require("perf_hooks");

var bfore, after;

function objectseeder(obj,n){
  for (let i = 0; i < n; i++) {
    obj["key_"+i*1337] = true;
  }
}

var subject = {}

//console.log("object", subject)

//
//switch ('fas') {
//  case 'fsafsa':
//    console.log("yeah")
//    break;
//
//  default:
//    console.log("no!")
//    break;
//}

function benchsample(n){
  var now = perf_hooks.performance.now;
  objectseeder(subject, n);
  console.log("\nstart",n,"samples");
  bfore = now();

  //for (var i = 0; i < n; i++) {
  //  subject.benchmark = true;
  //}
  for (const key in subject) {
    subject[key] = false;
  }

  after = now();

  console.log("diff:",after-bfore,"ms");
  console.log("per sample:",(after-bfore)/n,"ms");
  console.log("per sec:",1000/((after-bfore)/n),"acc/s")
  return after-bfore;
}

for (let samplesize = 0; samplesize < 10; samplesize++) {
  var ss = 10**samplesize;
  var t = benchsample(ss);
  if(t > 10000) break; // stop if reaches 10 sec
}*/

function testspread(b0, b1, ...spread){
  console.log(b0, b1)
  console.log([b1,b0,...spread])
}

testspread(5,9,5,6,7,8,2,1,5)

function testarray(){
  var arr1 = [1,2,3,1,-2], arr2 = [4,5,6]

  console.log("arr1:", arr1, "arr2:", arr2)

  console.log("indexOf:", arr1.indexOf(2), arr1.indexOf(5))
  console.log("lastIndexOf:", arr1.lastIndexOf(1), arr1.lastIndexOf(5))

  console.log("every:", arr1.every(v => v >= -2), arr1.every(v => v > 0))
  console.log("some:", arr1.some(v => v < 0), arr1.some(v => v > 3))

  console.log("shift:", arr1.shift(), arr1)
  console.log("pop:", arr1.pop(), arr1)

  console.log("push:", arr1.push(...arr2), arr1)
  console.log("unshift:", arr1.unshift(...arr2), arr1)
}

testarray()

console.log("start!")
var str = "  trimm!  ";
console.log(str.trim())